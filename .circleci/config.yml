version: 2.1
orbs:
  discord: antonioned/discord@0.1.0
jobs:
  build-linux64:
    docker:
      - image: ubuntu:20.04
    steps:
      - run: export DEBIAN_FRONTEND=noninteractive
      - run: export DEBCONF_NONINTERACTIVE_SEEN=true
      - run: touch /tmp/nyc.txt
      - run: echo "tzdata tzdata/Areas select America" > /tmp/nyc.txt
      - run: echo "tzdata tzdata/Zones/America select New_York" >> /tmp/nyc.txt
      - run: debconf-set-selections /tmp/nyc.txt
      - run: ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
      - run: apt-get update
      - run: apt-get install -y --no-install-recommends tzdata
      - run: apt-get install -y openssh-client git
      - run: apt-get install -y curl clang cmake build-essential libsdl2-dev libopenal-dev libvorbis-dev libtheora-dev libfreetype6-dev libcurl4-gnutls-dev git zip unzip
      - checkout
      - run: curl https://warfork.com/downloads/sdk/ --output third-party/steamworks/sdk.zip
      - run: unzip third-party/steamworks/sdk.zip -d third-party/steamworks
      - run: export CC=clang CXX=clang++
      - run: cmake -DBUILD_STEAMLIB=1 ./source
      - run: make -j8
      - run: echo "${CIRCLE_SHA1}" > ./source/build/commit.txt
      - run: echo "671610" > ./source/build/steam_appid.txt
      - run: tar -czvf ./source/Linux-x86_64-Release.tar.gz ./source/build/* --exclude ./source/build/*.a --exclude ./source/build/base*/*.a ./source/build/libs/*.a
      - discord/status:
          fail_only: false
          failure_message: ":red_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has failed!"
          success_message: ":green_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has succeeded!"
          webhook: "${DISCORD_STATUS_WEBHOOK}"
      - store_artifacts:
          path: ./source/Linux-x86_64-Release.tar.gz
          
  build-linux64-debug:
    docker:
      - image: ubuntu:20.04
    steps:
      - run: export DEBIAN_FRONTEND=noninteractive
      - run: export DEBCONF_NONINTERACTIVE_SEEN=true
      - run: touch /tmp/nyc.txt
      - run: echo "tzdata tzdata/Areas select America" > /tmp/nyc.txt
      - run: echo "tzdata tzdata/Zones/America select New_York" >> /tmp/nyc.txt
      - run: debconf-set-selections /tmp/nyc.txt
      - run: ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
      - run: apt-get update
      - run: apt-get install -y --no-install-recommends tzdata
      - run: apt-get install -y openssh-client git
      - run: apt-get install -y curl clang cmake build-essential libsdl2-dev libopenal-dev libvorbis-dev libtheora-dev libfreetype6-dev libcurl4-gnutls-dev git zip unzip
      - checkout
      - run: curl https://warfork.com/downloads/sdk/ --output third-party/steamworks/sdk.zip
      - run: unzip third-party/steamworks/sdk.zip -d third-party/steamworks
      - run: export CC=clang CXX=clang++
      - run: cmake -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_STEAMLIB=1 ./source
      - run: make -j8
      - run: echo "${CIRCLE_SHA1}" > ./source/build/commit.txt
      - run: echo "671610" > ./source/build/steam_appid.txt
      - run: tar -czvf ./source/Linux-x86_64-Debug.tar.gz ./source/build/* --exclude ./source/build/*.a --exclude ./source/build/base*/*.a ./source/build/libs/*.a
      - discord/status:
          fail_only: false
          failure_message: ":red_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has failed!"
          success_message: ":green_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has succeeded!"
          webhook: "${DISCORD_STATUS_WEBHOOK}"
      - store_artifacts:
          path: ./source/Linux-x86_64-Debug.tar.gz          

  build-osx:
    macos:
      xcode: '13.4.1'
    steps:
      - checkout
      - run: brew update
      - run: brew install curl cmake sdl2 openal-soft libvorbis theora freetype git zip unzip
      - run: curl https://warfork.com/downloads/sdk/ --output third-party/steamworks/sdk.zip
      - run: unzip third-party/steamworks/sdk.zip -d third-party/steamworks
      - run: cmake -G Xcode ./source
      - run: xcodebuild -project qfusion.xcodeproj/ -jobs 4 -configuration Release -target ALL_BUILD CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      - run: echo "${CIRCLE_SHA1}" > ./source/build/commit.txt
      - run: echo "671610" > ./source/build/steam_appid.txt
      - run: tar -czvf ./source/OSX-x86_64-Release.tar.gz ./source/build/Release/*.app
      - discord/status:
          fail_only: false
          failure_message: ":red_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has failed!"
          success_message: ":green_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has succeeded!"
          webhook: "${DISCORD_STATUS_WEBHOOK}"
      - store_artifacts:
          path: ./source/OSX-x86_64-Release.tar.gz

  build-osx-debug:
    macos:
      xcode: '13.4.1'
    steps:
      - checkout
      - run: brew update
      - run: brew install curl cmake sdl2 openal-soft libvorbis theora freetype git zip unzip
      - run: curl https://warfork.com/downloads/sdk/ --output third-party/steamworks/sdk.zip
      - run: unzip third-party/steamworks/sdk.zip -d third-party/steamworks
      - run: cmake -DCMAKE_BUILD_TYPE=DEBUG -G Xcode ./source
      - run: xcodebuild -project qfusion.xcodeproj/ -jobs 4 -configuration Debug -target ALL_BUILD CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      - run: echo "${CIRCLE_SHA1}" > ./source/build/commit.txt
      - run: echo "671610" > ./source/build/steam_appid.txt
      - run: tar -czvf ./source/OSX-x86_64-Debug.tar.gz ./source/build/Debug/*.app
      - discord/status:
          fail_only: false
          failure_message: ":red_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has failed!"
          success_message: ":green_circle: ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH} ${CIRCLE_JOB} (${CIRCLE_SHA1}) has succeeded!"
          webhook: "${DISCORD_STATUS_WEBHOOK}"
      - store_artifacts:
          path: ./source/OSX-x86_64-Debug.tar.gz
          
workflows:
  version: 2
  build:
    jobs:
      - build-linux64
      - build-linux64-debug
      - build-osx
      - build-osx-debug
